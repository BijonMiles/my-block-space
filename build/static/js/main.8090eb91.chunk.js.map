{"version":3,"sources":["assets/standard-wallpaper.jpg","components/UserInfo.jsx","components/Post.jsx","assets/free-speech-icon.svg","assets/privacy-icon.svg","assets/tracking-icon.svg","components/MyProfile.jsx","assets/settings.svg","assets/camera.svg","assets/users.svg","assets/2.png","assets/3.png","components/Signin.jsx","components/Navbar.jsx","components/NoResult.jsx","components/Loader.jsx","components/Profile.jsx","utils/reverseMergeSort.js","components/Feed.jsx","App.js","registerServiceWorker.js","index.js","components/InfiniteScroll.jsx"],"names":["module","exports","__webpack_require__","p","UserInfo","_this$props","this","props","person","username","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","xs","md","className","src","avatarUrl","alt","name","Component","Post","_this","Object","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","parseDate","time","now","state","Math","floor","concat","showFulltext","setState","fullText","Date","status","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","created_at","image","text","length","substring","onClick","MyProfile","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","isLocal","match","params","loadUserData","fetchData","postIds","settings","postIdAndName","getFile","decrypt","then","file","JSON","parse","i","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","fetchSettings","sent","stop","catch","console","log","finally","isLoading","captureFile","event","preventDefault","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","newImage","Buffer","result","toString","captureFileBackground","backgroundImage","defaultBackground","deleteImage","logUserInfo","toggleSettings","changeInfo","saveSettings","putFile","stringify","encrypt","displayFriends","checked","newStatus","bio","displayName","posts","handleNewStatusChange","bind","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","handleNewStatusSubmit","saveNewStatus","_this2","trim","createdAt","idNumber","post","id","unshift","options","value","_this3","backgroundStyle","backPic","settingsForm","react__WEBPACK_IMPORTED_MODULE_8___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","Group","as","Row","controlId","Label","column","sm","href","rel","type","onChange","hidden","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","variant","friendDisplay","friends","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","map","friend","key","Item","searchFor","style","_UserInfo__WEBPACK_IMPORTED_MODULE_21__","settingsIcon","usersIcon","description","xl","als","react_bootstrap__WEBPACK_IMPORTED_MODULE_15__","react_bootstrap__WEBPACK_IMPORTED_MODULE_16__","e","placeholder","cameraIcon","_InfiniteScroll__WEBPACK_IMPORTED_MODULE_22__","array","order","allPosts","Signin","handleSignIn","react_default","logo","Button","Container","Col","lg","freeSpeech","privacy","tracking","Navigationbar","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleSignOut","signUserOut","location","origin","handleKeyPress","user","searchUser","handleChange","undefined","Navbar","bg","collapseOnSelect","fixed","expand","Brand","Link","width","height","Toggle","aria-controls","Collapse","Nav","InputGroup","size","FormControl","Append","NoResult","Loader","Profile","addFriend","push","following","unFriend","filter","updateFriends","statuses","statusIndex","assertThisInitialized","indexOf","lookupProfile","profile","Person","error","includes","_this$state","Loader_Loader","InfiniteScroll","NoResult_NoResult","mergeSort","middle","left","slice","right","merge","leftIndex","rightIndex","Feed","fetchPostsFromFriends","unsortedPosts","keyCreatedAt","forEach","_ref","asyncToGenerator","regenerator_default","index","indexTwo","setTimeout","noPosts","_x","_x2","apply","arguments","avatarFallbackImage","App","checkSignedInStatus","isUserSignedIn","isSignInPending","handlePendingSignIn","userData","history","loadPerson","loadFriends","redirectToSignIn","isSignedIn","components_Navbar","Switch","Route","path","render","Profile_Profile","assign","exact","Feed_Feed","Signin_Signin","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","BrowserRouter","App_App","document","getElementById","URL","process","addEventListener","fetch","response","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","loadMore","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_loop","react__WEBPACK_IMPORTED_MODULE_6___default","_Post__WEBPACK_IMPORTED_MODULE_7__","counter","loadPost","loadFeed","handleScroll","scrollTop","documentElement","body","scrollHeight","clientHeight","innerHeight","ceil","removeEventListener","handleOnScroll","_this4"],"mappings":"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","file":"static/js/main.8090eb91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/standard-wallpaper.4bbd745f.jpg\";","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\nexport default class UserInfo extends Component {\n\n    render() {\n        const { person, username } = this.props;\n        return (\n            <Container>\n                <Row >\n                    <Col xs={12} md={3} className=\"myprofile-bio-wrap\">\n                        <div className=\"myprofile-bio\">\n                            <div className='bio-left'>\n                                <img\n                                    src={person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage}\n                                    className=\"avatar\"\n                                    alt='Avatar'\n                                />\n                            </div>\n                            <span className=\"heading-name\">{person.name() ? person.name()\n                                : 'Nameless Person'}\n                            </span><br />\n\n                            <span className='display-username text-secondary'>{username}</span>\n                        </div>\n                    </Col>\n\n                </Row>\n            </Container>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\n\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            now: Date.now(),\n            fullText: false\n        }\n    }\n\n    parseDate = (time) => {\n        const { now } = this.state;\n        if (Math.floor((now - time) / (1000 * 60)) < 60) {\n            return `${Math.floor((now - time) / (1000 * 60))} m`\n        } else if (Math.floor((now - time) / (1000 * 60 * 60)) < 24) {\n            return `${Math.floor((now - time) / (1000 * 60 * 60))} h`\n        } else if (Math.floor((now - time) / (1000 * 60 * 60 * 24)) < 7) {\n            return `${Math.floor((now - time) / (1000 * 60 * 60 * 24))} d`\n        } else if (Math.floor((now - time) / (1000 * 60 * 60 * 24)) < 365) {\n            return `${Math.floor(Math.floor((now - time) / (1000 * 60 * 60 * 24)) / 7)} w`\n        }\n    }\n    showFulltext = () => {\n        this.setState({ fullText: !this.state.fullText})\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n        const {person, username, status} = this.props;\n\n        return (\n            <div className=\"my-post\" >\n                <Row className='poster-info-con'>\n                    <Col xs={2}>\n                        <Link className='post-link' to={`/users/${username}`}><img\n                            src={person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage}\n                            alt=''\n                            className=\"post-img\"\n                        /></Link>\n                    </Col>\n                    <Col xs={3} className='poster-info'>\n                        <Link className='post-link' to={`/users/${username}`}>{username}</Link>\n                    </Col>\n                    <Col xs={4}></Col>\n                    <Col xs={3}>\n                        <span className='post-date'>{`${this.parseDate(status.created_at)} ago`}</span>\n                    </Col>\n                </Row>\n                <hr />\n                {\n                    status.image &&\n                    <div className='post-pic-container'>\n                        <img alt='' className='post-pic' src={status.image} />\n                        <hr /></div>}\n                {!this.state.fullText && (status.text.length > 500 ? (<pre>{status.text.substring(0, 500)}...<br/><strong className='show-more' onClick={this.showFulltext}>show more</strong></pre>) : <pre>{status.text}</pre>)}\n\n                {this.state.fullText && <pre>{status.text} <br /><strong className='show-more' onClick={this.showFulltext}>show less</strong></pre>}\n            </div>\n        )\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/free-speech-icon.417703c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/privacy-icon.bb33b0ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/tracking-icon.2f9daf47.svg\";","import React, { Component } from 'react';\nimport {\n    loadUserData,\n    getFile,\n    putFile,\n\n} from 'blockstack';\nimport { Row, Col, ListGroup, Button, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport backPic from '../assets/standard-wallpaper.jpg';\nimport settingsIcon from '../assets/settings.svg';\nimport cameraIcon from '../assets/camera.svg';\nimport usersIcon from '../assets/users.svg';\nimport UserInfo from './UserInfo';\nimport InfiniteScroll from './InfiniteScroll';\n\n\nexport default class MyProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            newStatus: \"\",\n            isLoading: true,\n            changeInfo: false,\n            newImage: false,\n            settings: {\n                backgroundImage: false,\n                image: false,\n                bio: false,\n                displayName: false\n            },\n            displayFriends: false,\n            posts: {},\n            postIds: [],\n            postIdAndName: {}\n        };\n        this.handleNewStatusChange = this.handleNewStatusChange.bind(this);\n        this.handleNewStatusSubmit = this.handleNewStatusSubmit.bind(this);\n        this.saveNewStatus = this.saveNewStatus.bind(this);\n    }\n\n    isLocal = () => {\n        return this.props.match.params.username === loadUserData().username ? true : false;\n    }\n\n    fetchData = () => {\n        let postIds;\n        let postIdAndName = {}\n        const options = { decrypt: false }\n        let settings;\n        getFile('postids.json', options)\n        .then((file) => {\n            postIds = JSON.parse(file || '[]')\n            if (postIds.length > 0) {\n                for (let i = 0; i < postIds.length; i++) {\n                    postIdAndName[`${postIds[i]}`] = this.props.username;\n                }\n            }\n        })\n        .then(async()=> {\n            settings = await this.fetchSettings()\n        })\n        .catch(() => {\n            console.log('oepsie, could not fetch data')\n        })\n        .finally(() => {\n            this.setState({\n                isLoading: false,\n                postIds: postIds,\n                postIdAndName: postIdAndName,\n                settings: settings\n            });\n        })\n    }\n    fetchSettings = () => {\n        const options = { decrypt: false }\n        return getFile('settings.json', options)\n            .then((file) => {\n                let settings = JSON.parse(file || false)\n                return settings ? settings : this.state.settings\n            })\n    }\n\n    saveNewStatus() {\n        let postIds = this.state.postIds;\n        let posts = this.state.posts;\n        let text = this.state.newStatus.trim();\n        if (text.length === 0) {return false};\n        let createdAt = Date.now();\n        let idNumber = postIds.length\n\n        let post = {\n            id: idNumber++,\n            text: text,\n            created_at: createdAt,\n            image: this.state.newImage\n        }\n\n        postIds.unshift(createdAt);\n        const options = {encrypt: false }\n        putFile(`post${createdAt}.json`, JSON.stringify(post), options)\n        .then(() => {\n            putFile('postids.json', JSON.stringify(postIds), options)\n            .then(() => {\n                this.setState({\n                    postIds: postIds,\n                    posts: posts\n                })\n                this.fetchData()\n            })\n            .catch(() => {\n                console.log('something went wrong with saving your post id')\n            })\n        })\n        .catch(() => {\n            console.log('something went wrong with saving your post')\n        })\n    }\n\n    handleNewStatusChange(event) {\n        this.setState({ newStatus: event.target.value })\n    }\n    captureFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            this.setState({newImage: `data:image/jpeg;base64,${Buffer(reader.result).toString(\"base64\")}`});\n        };\n    };\n    captureFileBackground = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            this.setState({ \n                settings: {\n                    backgroundImage: `data:image/jpeg;base64,${Buffer(reader.result).toString(\"base64\")}`\n                }\n            });\n        };\n    }\n    defaultBackground = (event) => {\n        event.preventDefault();\n        this.setState({\n            settings: {\n                backgroundImage: false\n            }\n        })\n    }\n\n    handleNewStatusSubmit(event) {\n        this.saveNewStatus()\n        this.setState({\n            newStatus: \"\",\n            newImage: false\n        })\n    }\n    deleteImage = () => {\n        this.setState({ newImage: false})\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    logUserInfo = () => {\n        console.log(loadUserData());\n    }\n    toggleSettings = () => {\n        this.setState({changeInfo: !this.state.changeInfo})\n    }\n    saveSettings = () => {\n        let settings = this.state.settings\n\n        const options = { encrypt: false }\n        putFile('settings.json', JSON.stringify(settings), options)\n        .then(() => {\n            this.setState({\n                changeInfo: false\n            })\n        })\n    }\n    displayFriends = () => {\n        this.setState({displayFriends: !this.state.displayFriends})\n    }\n\n    render() {\n        const { person, username } = this.props;\n        const backgroundStyle = {\n            'backgroundImage': `url(\"${this.state.settings.backgroundImage ? this.state.settings.backgroundImage : backPic}\"`\n        }\n        const settingsForm = (<div className=\"new-status settings\">\n            <Row>\n                <Col md={12}>\n                    <Form>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"12\">\n                                To change the display name, image and bio press <a target='_blank' href='https://browser.blockstack.org/profiles' rel=\"noopener noreferrer\" >here</a>.\n                            </Form.Label>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"3\">\n                                Background image\n                            </Form.Label>\n                            <Col sm=\"9\">\n                                <label className=\"btn btn-outline-success\">\n                                    Upload <input type=\"file\" onChange={this.captureFileBackground} hidden />\n                                </label>\n                                {'     '}\n                                <label className=\"btn btn-outline-danger\" onClick={this.defaultBackground}>\n                                    Default\n                                </label>\n                            </Col>\n                        </Form.Group>\n                        <hr />\n                        <Button variant=\"success\" onClick={this.saveSettings}>\n                            Save\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </div>);\n        const friendDisplay = this.props.friends.length > 0 ? (<div className='profile-posts'>\n            <div className=\"my-post\"><h1>Friends</h1>\n            <ListGroup variant=\"flush\">\n            {this.props.friends.map((friend) => (\n                <div className=\"my-friend\" key={friend}>\n                    <Row>\n                        <Col xs={12}>\n                            <ListGroup.Item onClick={() => { this.props.searchFor(friend) }}>{friend}</ListGroup.Item>\n                        </Col>\n                    </Row>\n                </div>\n            )\n                    )}</ListGroup></div>\n        </div>) : (\n                <div className='profile-posts'>\n                    <div className=\"my-post\"><h1>Friends</h1>\n                        <ListGroup variant=\"flush\">\n                            <Row>\n                                <Col xs={12}>\n                                <ListGroup.Item>You don't have any friends yet.</ListGroup.Item>\n                                </Col>\n                            </Row>\n                        </ListGroup>\n                    </div>\n                </div>);\n        return (\n            <div>\n            {person &&\n                <div className=\"container-myprofile\">\n                    <div className='container-desc-prof'>\n                    <div style={backgroundStyle} className=\"background-image\"></div>\n                    <UserInfo person={person} username={username} />\n                    <div className='myprofile-options'>\n                            <Row className='my-options' >\n                                <Col xs={3}>\n                                    \n                                </Col>\n                                <Col xs={1}>\n                                    <img src={settingsIcon} \n                                    onClick={this.toggleSettings}\n                                    alt=''\n                                    className='bio-icons'/>\n                                </Col>\n                                <Col xs={8}>\n                                    <img src={usersIcon}\n                                        onClick={this.displayFriends}\n                                        alt=''\n                                        className='bio-icons' />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={3}></Col>\n                                <Col xs={12} md={8}><hr /> </Col>\n                                <Col md={1}>\n\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={12}>\n                                    <p className='text-secondary'>{person.description() ? person.description()\n                                            : 'You have no bio.'}\n                                    </p> \n                                </Col>\n                            </Row>\n                    </div>\n                    \n                    </div>\n\n                    {this.state.displayFriends && friendDisplay}\n                    {!this.state.displayFriends && <div className='profile-posts'>\n                        <Row>\n                        <Col xs={1} md={1} xl={2}>\n                                \n                        </Col>\n                        <Col sm={12} md={10} xl={8}>\n                        {this.isLocal() &&\n                            <div>\n                                {this.state.changeInfo && settingsForm }\n                            <div className=\"new-status\">\n                                <Row>\n                                    <Col md={12}>\n                                            {\n                                                this.state.newImage &&\n                                                <div className='post-pic-container'>\n                                                    <Button onClick={this.deleteImage} variant=\"outline-danger\" className='delete-img'>X</Button>\n                                                    <img alt='' className='post-pic' als='' src={this.state.newImage} />\n                                                </div>}\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    className=\"input-status\"\n                                                    value={this.state.newStatus}\n                                                    onChange={e => this.handleNewStatusChange(e)}\n                                                    placeholder=\"What's on your mind?\"\n                                                />\n                                            </InputGroup>\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                <Col xs={2} className='input-btn-wrapper'>\n                                    <label className=\"btn btn-outline-secondary\">\n                                        <img alt='' src={cameraIcon} /> <input type=\"file\" onChange={this.captureFile} hidden/>\n                                    </label>\n                                </Col>\n                                <Col xs={6}></Col>\n                                <Col xs={4} className=\" input-btn-wrapper\">\n                                            <Button variant=\"outline-success\"\n                                        className=\"\"\n                                        onClick={e => this.handleNewStatusSubmit(e)}\n                                    >\n                                        POST\n                                    </Button>\n                                </Col>\n                                </Row>\n                            </div>\n                            </div>\n                        }</Col>\n                        <Col xs={1} md={1}></Col>\n                        </Row>\n                        <Row>\n                        <Col xs={1} md={1} xl={2}></Col>\n                            <Col sm={12} md={10} xl={8}>\n                                <InfiniteScroll array={false} order={this.state.postIds} allPosts={this.state.posts} postIdAndName={this.state.postIdAndName} person={person} username={username}/>\n                        </Col>\n                        <Col xs={1} md={1}></Col>\n                        </Row>\n                    </div>}\n                </div>}\n            </div>\n\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/settings.674d9d35.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.8b7b6457.svg\";","module.exports = __webpack_public_path__ + \"static/media/users.937fec69.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.1c89fea0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.c14b3b5d.png\";","import React, { Component } from 'react';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport logo from '../assets/2.png';\nimport freeSpeech from '../assets/free-speech-icon.svg';\nimport privacy from '../assets/privacy-icon.svg';\nimport tracking from '../assets/tracking-icon.svg'\n\nexport default class Signin extends Component {\n    \n\n    render() {\n        const { handleSignIn } = this.props;\n\n        return (\n            <div className=\"panel-landing\">\n                <div className='landing-container'>\n                <div className='landing-logo-container'>\n                    <img className='landing-logo' src={logo} alt='logo' />\n                </div>\n                <h1>The Decentralized Social Network</h1>\n                <p>Create, Follow, and Share. You always decide with who. </p>\n                </div>\n                <div className='landing-square-container'>\n                    <div className='square-container'>\n                        <div className='landing-square-text'>\n                            <Button\n                                className='signin-button'\n                                onClick={handleSignIn.bind(this)}\n                            >\n                                Sign In with Blockstack\n                        </Button>\n                        </div>\n                        <div className='landing-square'>\n\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className='card-container-back'>\n                    <Container className='card-container'>\n                        <Row>\n                            <Col md={12} lg={4}>\n                                <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                                <img src={freeSpeech} alt='free speech icon' />\n                                                <span>Free Speech</span>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <img src={freeSpeech} alt='free speech icon' />\n                                            <hr/>\n                                            <p>Take a stand against government surveillance or companies using your social media data without your consent. You decide what you share and with who you share it.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md={12} lg={4}>\n                                <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                            <img src={privacy} alt='privacy-icon' />\n                                                <span>You own your data</span>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <img src={privacy} alt='privacy-icon' />\n                                            <hr />\n                                            <p>We use Blockstack’s decentralized identity and storage system, giving you total ownership of your data. You control who can access your data, not us.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md={12} lg={4}>\n                                <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                            <img src={tracking} alt='no tracking icon' />\n                                                <span>No tracking</span>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <img src={tracking} alt='no tracking icon' />\n                                            <hr/>\n                                            <p>My Block Space is an open source project created by the community for the community. The goal is to make an easy to use social platform for free where the user is <strong>not</strong> the product.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Navbar, Nav, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport {signUserOut} from 'blockstack';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/3.png';\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\n\n\nclass Navigationbar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchUser: undefined\n        }\n    }\n\n    handleSignOut = (event) => {\n        event.preventDefault();\n        signUserOut(window.location.origin)\n    }\n    \n    handleKeyPress = (e) => {\n        e.preventDefault();\n        const user = this.state.searchUser.trim();\n        this.props.searchFor(user);\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        this.setState({\n            searchUser: event.target.value\n        })\n    }\n\n\n    render() {\n        \n        const { person, username } = this.props;\n        \n        return (\n            <div>\n                <Navbar bg=\"light\" collapseOnSelect fixed=\"top\" expand=\"sm\" className='navbar-con'>\n                        <Navbar.Brand >\n                        <Link className='nav-home-link' to='/feed'>\n                            <img\n                                src={logo}\n                                width=\"30\"\n                                height=\"30\"\n                                className=\"d-inline-block align-top logo-nav\"\n                                alt=\"MY BLOCK SPACE\"\n                            />\n                        </Link>\n                        </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className='mr-auto'>\n                            <InputGroup size=\"sm\">\n                                <FormControl\n                                    type=\"text\"\n                                    placeholder=\"Search for friends\"\n                                    onChange={e => this.handleChange(e)}\n                                />\n                                <InputGroup.Append>\n                                    <Button variant=\"outline-secondary\" onClick={e => this.handleKeyPress(e)} >Search</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Nav>\n                        <Nav className='justify-content-end\"'>\n                            <Nav.Link onClick={this.handleSignOut}>\n                                Sign-Out\n                            </Nav.Link>\n                            <Link to={`/${username ? username : null}`}>\n                            <img\n                                    src={person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage}\n                                alt=''\n                                className=\"nav-img\"\n                            />\n                            </Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Navigationbar;","import React, { Component } from 'react';\n\nexport default class NoResult extends Component {\n    \n\n    render() {\n        return (\n            <div className='no-res-container'>\n                <p>Oopsie... <br /> We can't find the blockstack id <big>\"{this.props.username}\"</big>.</p>\n                \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Loader extends Component {\n\n    render() {\n        return (<div className=\"container-myprofile\"><div className='loader'></div></div>)\n    }\n    \n}","import React, { Component } from 'react';\nimport {\n    loadUserData,\n    Person,\n    getFile,\n    lookupProfile,\n    putFile\n} from 'blockstack';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport backPic from '../assets/standard-wallpaper.jpg';\nimport NoResult from './NoResult';\nimport Loader from './Loader';\nimport UserInfo from './UserInfo';\nimport InfiniteScroll from './InfiniteScroll';\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            person: undefined,\n            username: \"\",\n            checked: false,\n            statuses: [],\n            statusIndex: 0,\n            isLoading: true,\n            following: false,\n            postIds: [],\n            posts: [],\n            postIdAndName: {}\n        };\n        this.fetchData = this.fetchData.bind(this);\n    }\n\n    isLocal = () => {\n        return this.props.match.params.username === loadUserData().username ? true : false;\n    }\n\n    fetchData() {\n        const username = this.props.match.params.username.indexOf('.id.blockstack') > -1 ? this.props.match.params.username : this.props.match.params.username + '.id.blockstack';\n        this.setState({ isLoading: true, username: username })\n        lookupProfile(username)\n            .then((profile) => {\n                this.setState({\n                    person: new Person(profile)\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    person: false\n                })\n            })\n\n        const options = { username: username, decrypt: false }\n        let postIds;\n        let postIdAndName = {}\n        getFile('postids.json', options)\n        .then((file) => {\n            postIds = JSON.parse(file || '[]')\n            if (postIds.length > 0) {\n                for (let i = 0; i < postIds.length; i++) {\n                    postIdAndName[`${postIds[i]}`] = username;\n                }\n            }\n        })\n        .catch(() => {\n            console.log('oepsie, could not fetch data')\n        })\n        .finally(() => {\n            this.setState({\n                isLoading: false,\n                postIds: postIds,\n                postIdAndName: postIdAndName\n            });\n        })\n        this.props.friends.includes(username) ? this.setState({ following: true }) : this.setState({ following: false });\n    }\n    addFriend = (event) => {\n        event.preventDefault();\n        let friends = this.props.friends\n        friends.push(this.state.username)\n        const options = { encrypt: false }\n        putFile('friends.json', JSON.stringify(friends), options)\n            .then((result) => {\n                console.log('res ,', result)\n                this.setState({ following: true })\n            })\n        this.setState({following: true})\n    }\n    unFriend = (event) => {\n        event.preventDefault();\n        let friends = this.props.friends\n        let user = this.state.username\n        friends = friends.filter(username => username !== user)\n        this.props.updateFriends(friends);\n        const options = { encrypt: false }\n        putFile('friends.json', JSON.stringify(friends), options)\n        .then((result) => {\n            console.log('res ,', result)\n            this.setState({ following: false })\n        })\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n    componentWillReceiveProps() {\n        this.fetchData()\n    }\n    logUserInfo = () => {\n        console.log(loadUserData());\n    }\n    \n\n    render() {\n        const { person, username, isLoading } = this.state;\n        const backgroundStyle = {\n            'backgroundImage': `url(\"${backPic}\"`\n        }\n        \n        return (\n\n            <div>\n            {isLoading && <Loader/>}\n            {!isLoading && person ?\n                    <div className=\"container-myprofile\">\n                        <div style={backgroundStyle} className='container-desc-prof'>\n                            <UserInfo person={person} username={username} />\n                            <div className='myprofile-options'>\n                                <Row className='my-options' >\n                                    <Col xs={3}>\n\n                                    </Col>\n                                    <Col xs={2}>\n                                        <p className='text-secondary'>Posts: {this.state.postIds.length}</p>\n                                    </Col>\n                                    <Col xs={2}>\n                                        {!this.state.following ? <Button variant=\"outline-success\"\n                                            className=\"\"\n                                            onClick={this.addFriend}\n                                        >\n                                        Follow\n                                        </Button> : <Button variant=\"outline-danger\"\n                                        className=\"\"\n                                        onClick={this.unFriend}\n                                    >\n                                        Unfollow\n                                        </Button>}\n                                    </Col>\n                                    <Col xs={5}>\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={3}></Col>\n                                    <Col xs={12} md={8}><hr /> </Col>\n                                    <Col md={1}>\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12}>\n                                        <p className='text-secondary'>{person.description() ? person.description()\n                                            : 'You have no bio.'}\n                                        </p>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                        </div>\n                        <div className='profile-posts'>\n                            <Row>\n                                <Col xs={1} md={1} xl={2}></Col>\n                                <Col sm={12} md={10} xl={8}>\n                                    {this.state.isLoading && <span>Loading...</span>}\n                                    {!this.state.isLoading && this.state.postIds.length > 0 && <InfiniteScroll array={false} order={this.state.postIds} postIdAndName={this.state.postIdAndName} person={person} username={username} />\n                                    }\n                                    {this.state.postIds.length === 0 && <h1>This user has no posts yet.</h1>}\n                                </Col>\n                                <Col xs={1} md={1}></Col>\n                            </Row>\n                        </div>\n                    </div> : <NoResult username={username}/>}\n            </div>\n        );\n    }\n}","export const mergeSort = (array) => {\n    if (array.length === 1 || array.length === 0) {\n        return array\n    }\n    // Split Array in into right and left\n    const length = array.length;\n    const middle = Math.floor(length / 2)\n    const left = array.slice(0, middle)\n    const right = array.slice(middle)\n\n    return merge(\n        mergeSort(left),\n        mergeSort(right)\n    )\n}\n\nconst merge = (left, right) => {\n    const result = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n    while (leftIndex < left.length &&\n        rightIndex < right.length) {\n        if (left[leftIndex] > right[rightIndex]) {\n            result.push(left[leftIndex]);\n            leftIndex++;\n        } else {\n            result.push(right[rightIndex]);\n            rightIndex++\n        }\n    }\n    return result.concat(left.slice(leftIndex)).concat(right.slice(rightIndex));\n}\n\n\n\n","import React, { Component } from 'react';\nimport { Person, lookupProfile, getFile } from 'blockstack';\nimport Post from './Post';\nimport Loader from './Loader';\nimport { Row, Col } from 'react-bootstrap';\nimport InfiniteScroll from './InfiniteScroll';\nimport { mergeSort } from '../utils/reverseMergeSort.js';\n\nexport default class Feed extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allPosts: [],\n            isLoading: false,\n            order: [],\n            noPosts: false\n        }\n    }\n\n    fetchPostsFromFriends = () => {\n        this.setState({isLoading: true})\n        const { friends } = this.props;\n        let unsortedPosts = {};\n        let keyCreatedAt = []\n        friends.forEach(async (username, index) => {\n            let person = await lookupProfile(username)\n                .then((profile) => {\n                    return new Person(profile)\n                })\n                .catch((error) => {\n                    console.log('could not resolve profile')\n                })\n\n            const options = { username: username, decrypt: false }\n\n            getFile('postids.json', options)\n            .then((file) => {\n                let postIds = JSON.parse(file || '[]')\n                if (postIds.length > 0) {\n                    postIds.forEach((id, indexTwo) => {\n                        getFile(`post${id}.json`, options)\n                            .then((file) => {\n                                let post = JSON.parse(file)\n                                keyCreatedAt.push(id)\n                                unsortedPosts[id] = <Post person={person} username={username} status={post} key={post.created_at} />\n                                \n                            })\n                    })\n                }\n            })\n            .catch((error) => {\n                console.log('fail')\n            })\n            .finally(() => {\n                setTimeout(() => { if (index === friends.length - 1) {\n                    this.setState({\n                        allPosts: unsortedPosts,\n                        order: mergeSort(keyCreatedAt),\n                        isLoading: false,\n                        noPosts: unsortedPosts.length === 0 ? true : false\n                    })\n                }\n                }, 1000)\n            })\n            \n        })\n    }\n\n    componentDidMount() {\n        this.fetchPostsFromFriends()\n    }\n    \n\n    render() {\n        \n\n        return (\n            <div className='feed-container'>\n                <Row>\n                    <Col md={1} xl={2}></Col>\n                    <Col sm={12} md={10} xl={8}>\n                        {this.state.isLoading && <Loader />}\n                        {this.state.noPosts && !this.state.isLoading && <h1>Oepsie, you have no posts in your timeline yet</h1>}\n                        {!this.state.noPosts && !this.state.isLoading && \n                        <InfiniteScroll array={true} order={this.state.order} allPosts={this.state.allPosts} />\n                        \n                        }\n                    </Col>\n                    <Col md={1} xl={2}></Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport MyProfile from './components/MyProfile';\nimport Signin from './components/Signin';\nimport Navbar from './components/Navbar';\nimport Profile from './components/Profile';\nimport Feed from './components/Feed';\nimport {\n  isSignInPending,\n  isUserSignedIn,\n  redirectToSignIn,\n  handlePendingSignIn,\n  loadUserData,\n  getFile,\n  Person\n} from 'blockstack';\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css';\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    let isSignedIn = this.checkSignedInStatus();\n\n    this.state = {\n      isSignedIn,\n      person: {\n        name() {\n          return 'Anonymous';\n        },\n        avatarUrl() {\n          return avatarFallbackImage;\n        },\n        description() {\n          return 'No description'\n        }\n      },\n      username: null,\n      friends: []\n    }\n\n    if (isSignedIn) {\n      this.loadPerson();\n    }\n  }\n\n  // function checks if user is signed in.\n  checkSignedInStatus = () => {\n    if (isUserSignedIn()) {\n      return true;\n    } else if (isSignInPending()) {\n      handlePendingSignIn().then(function (userData) {\n        this.props.history.push('/')\n      })\n      return false;\n    }\n  }\n\n  loadPerson = async () => {\n    let userData = loadUserData()\n    let person = await new Person(userData.profile)\n    this.loadFriends();\n    let username = await userData.username\n    // let urlusername = username.slice(0, -11);\n    this.setState({ person, username })\n    this.props.history.push(`/${username}`)\n  }\n\n  loadFriends = () => {\n    const options = { decrypt: false }\n    getFile('friends.json', options)\n      .then((file) => {\n        let friends = JSON.parse(file || '[]')\n        friends.push(this.state.username)\n        this.setState({\n          friends: friends\n        })\n      })\n  }\n\n  handleSignIn = (e) => {\n    e.preventDefault();\n    const origin = window.location.origin\n    redirectToSignIn(origin, origin + '/manifest.json', ['store_write', 'publish_data'])\n  }\n\n  searchFor = (name) => {\n    this.props.history.push(`/users/${name}`)\n  }\n  updateFriends = (friends) => {\n    this.setState({friends: friends})\n  }\n\n  componentWillMount() {\n    if (isSignInPending()) {\n      handlePendingSignIn().then((userData) => {\n        // not sure what to do with user data\n        window.location = window.location.origin;\n      });\n    }\n  }\n\n  componentDidMount() {\n    // this.loadPerson()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.isSignedIn ?\n          <Signin handleSignIn={this.handleSignIn} />\n          :\n          (<div><Navbar\n            searchFor={this.searchFor}\n            person={this.state.person}\n            username={this.state.username}\n           />\n          <Switch>\n            <Route\n              path='/users/:username'\n              render={\n                props => <Profile\n                  updateFriends={this.updateFriends}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            <Route\n              exact path='/feed'\n              render={\n                props => <Feed\n                  searchFor={this.searchFor}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            <Route\n              path='/:username'\n              render={\n                props => <MyProfile\n                  searchFor={this.searchFor}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            <Route\n              exact path='/'\n              render={\n                props => <Feed\n                  searchFor={this.searchFor}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            \n          </Switch></div>)\n        }\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <Route\n            path='/'\n            render={props => <App {...props} />}\n        />\n\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();","import React, { Component } from 'react';\nimport Post from './Post';\nimport { getFile } from 'blockstack';\n\n\nexport default class InfiniteScroll extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            posts: {},\n            counter: 0,\n            loadPost: false\n        }\n    }\n\n    loadMore = () => {\n        if (this.props.array) {return false}\n        let posts = {...this.state.posts}\n        for (let i = this.state.counter; i < this.state.counter + 2; i++) {\n            let id = this.props.order[i]\n            const options = { username: this.props.postIdAndName[id], decrypt: false }\n            getFile(`post${id}.json`, options)\n                .then((file) => {\n                    let post = JSON.parse(file)\n                    return <Post person={this.props.person} username={this.props.username} status={post} key={post.created_at} />\n                })\n                .then((post) => {\n                    posts[id] = post;\n                })\n                .then(() => {\n                    if (i === this.state.counter + 1) {\n                        this.setState({\n                            posts: posts,\n                            counter: (i),\n                            loadPost: false\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.setState({\n                        posts: posts,\n                        counter: (i - 1),\n                        loadPost: false\n                    })\n                })\n        }\n    }\n    loadFeed = () => {\n\n    }\n    handleScroll = () => {\n        if (this.props.order.length - 1 > this.state.counter && !this.state.loadPost) {\n            var scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n            var scrollHeight = (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight;\n            var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n            var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n\n            if (scrolledToBottom && !this.props.array) {\n                this.loadMore();\n                this.setState({ loadPost: true })\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('load', (() => {\n            setTimeout(() => {\n                this.loadMore();\n                this.setState({ loadPost: true })\n            }, 300);\n        })) \n        \n    }\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleOnScroll);\n        window.removeEventListener('load', (() => {\n            setTimeout(() => {\n                this.loadMore();\n            }, 300);\n        })) \n    }\n\n    render() {\n        \n        return(\n            <div className='infinite-list'>\n                {this.props.array && this.props.order.map(index => {return this.props.allPosts[index]})}\n                {!this.props.array && this.props.order.map(index => {return this.state.posts[index]})}\n                {this.state.loadPost && <div className='feed-loader'></div>}\n            </div>\n        )\n    }\n}"],"sourceRoot":""}