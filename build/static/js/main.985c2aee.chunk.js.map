{"version":3,"sources":["assets/standard-wallpaper.jpg","components/UserInfo.jsx","assets/free-speech-icon.svg","assets/privacy-icon.svg","assets/tracking-icon.svg","components/MyProfile.jsx","assets/settings.svg","assets/camera.svg","assets/users.svg","assets/2.png","assets/3.png","components/Signin.jsx","components/Navbar.jsx","components/NoResult.jsx","components/Loader.jsx","components/Profile.jsx","utils/reverseMergeSort.js","components/Feed.jsx","App.js","registerServiceWorker.js","index.js","components/Post.jsx","components/InfiniteScroll.jsx"],"names":["module","exports","__webpack_require__","p","UserInfo","_this$props","this","props","person","username","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","xs","md","className","src","avatarUrl","alt","name","Component","MyProfile","_this","Object","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","isLocal","match","params","loadUserData","fetchData","postIds","settings","postIdAndName","getFile","decrypt","then","file","JSON","parse","length","i","concat","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","fetchSettings","sent","stop","catch","console","log","finally","setState","isLoading","state","captureFile","event","preventDefault","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","newImage","Buffer","result","toString","captureFileBackground","backgroundImage","defaultBackground","deleteImage","logUserInfo","toggleSettings","changeInfo","saveSettings","putFile","stringify","encrypt","displayFriends","checked","newStatus","image","bio","displayName","posts","handleNewStatusChange","bind","_Users_chance_webDev_blockstack_examples_blockstack_create_react_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","handleNewStatusSubmit","saveNewStatus","_this2","text","trim","createdAt","Date","now","idNumber","post","id","created_at","unshift","options","value","_this3","backgroundStyle","backPic","settingsForm","react__WEBPACK_IMPORTED_MODULE_8___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","Group","as","Row","controlId","Label","column","sm","href","rel","type","onChange","hidden","onClick","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","variant","friendDisplay","friends","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","map","friend","key","Item","searchFor","style","_UserInfo__WEBPACK_IMPORTED_MODULE_21__","settingsIcon","usersIcon","description","xl","als","react_bootstrap__WEBPACK_IMPORTED_MODULE_15__","react_bootstrap__WEBPACK_IMPORTED_MODULE_16__","e","placeholder","cameraIcon","_InfiniteScroll__WEBPACK_IMPORTED_MODULE_22__","array","order","allPosts","doneLoading","Signin","handleSignIn","react_default","logo","Button","Container","Col","lg","freeSpeech","privacy","tracking","Navigationbar","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleSignOut","signUserOut","location","origin","handleKeyPress","user","searchUser","handleChange","undefined","Navbar","bg","collapseOnSelect","fixed","expand","Brand","Link","to","width","height","Toggle","aria-controls","Collapse","Nav","InputGroup","size","FormControl","Append","NoResult","Loader","Profile","addFriend","push","following","unFriend","filter","updateFriends","statuses","statusIndex","assertThisInitialized","indexOf","lookupProfile","profile","Person","error","includes","_this$state","Redirect","Loader_Loader","InfiniteScroll","NoResult_NoResult","mergeSort","middle","Math","floor","left","slice","right","merge","leftIndex","rightIndex","Feed","fetchPostsFromFriends","postids","counter","getPostIds","noPosts","res","concatPostIds","connectIdWithName","postId","toConsumableArray","parseInt","toFixed","ProgressBar","striped","avatarFallbackImage","App","checkSignedInStatus","isUserSignedIn","isSignInPending","handlePendingSignIn","userData","history","loadPerson","asyncToGenerator","regenerator_default","loadFriends","redirectToSignIn","isSignedIn","components_Navbar","Switch","Route","path","render","Profile_Profile","assign","exact","Feed_Feed","Signin_Signin","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","BrowserRouter","App_App","document","getElementById","URL","process","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","Post","parseDate","time","showFulltext","fullText","substring","loadMore","objectSpread","_loop","Post_Post","loadPost","loadFeed","_loop2","handleScroll","scrollTop","documentElement","body","scrollHeight","clientHeight","innerHeight","ceil","first","removeEventListener","handleOnScroll","index"],"mappings":"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","file":"static/js/main.985c2aee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/standard-wallpaper.4bbd745f.jpg\";","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\nexport default class UserInfo extends Component {\n\n    render() {\n        const { person, username } = this.props;\n        return (\n            <Container>\n                <Row >\n                    <Col xs={12} md={3} className=\"myprofile-bio-wrap\">\n                        <div className=\"myprofile-bio\">\n                            <div className='bio-left'>\n                                <img\n                                    src={person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage}\n                                    className=\"avatar\"\n                                    alt='Avatar'\n                                />\n                            </div>\n                            <span className=\"heading-name\">{person.name() ? person.name()\n                                : 'Nameless Person'}\n                            </span><br />\n\n                            <span className='display-username text-secondary'>{username}</span>\n                        </div>\n                    </Col>\n\n                </Row>\n            </Container>\n        )\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/free-speech-icon.417703c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/privacy-icon.bb33b0ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/tracking-icon.2f9daf47.svg\";","import React, { Component } from 'react';\nimport {\n    loadUserData,\n    getFile,\n    putFile,\n\n} from 'blockstack';\nimport { Row, Col, ListGroup, Button, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport backPic from '../assets/standard-wallpaper.jpg';\nimport settingsIcon from '../assets/settings.svg';\nimport cameraIcon from '../assets/camera.svg';\nimport usersIcon from '../assets/users.svg';\nimport UserInfo from './UserInfo';\nimport InfiniteScroll from './InfiniteScroll';\n\n\nexport default class MyProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            newStatus: \"\",\n            isLoading: true,\n            changeInfo: false,\n            newImage: false,\n            settings: {\n                backgroundImage: false,\n                image: false,\n                bio: false,\n                displayName: false\n            },\n            displayFriends: false,\n            posts: {},\n            postIds: [],\n            postIdAndName: {}\n        };\n        this.handleNewStatusChange = this.handleNewStatusChange.bind(this);\n        this.handleNewStatusSubmit = this.handleNewStatusSubmit.bind(this);\n        this.saveNewStatus = this.saveNewStatus.bind(this);\n    }\n\n    isLocal = () => {\n        return this.props.match.params.username === loadUserData().username ? true : false;\n    }\n\n    fetchData = () => {\n        let postIds;\n        let postIdAndName = {}\n        const options = { decrypt: false }\n        let settings;\n        getFile('postids.json', options)\n        .then((file) => {\n            postIds = JSON.parse(file || '[]')\n            if (postIds.length > 0) {\n                for (let i = 0; i < postIds.length; i++) {\n                    postIdAndName[`${postIds[i]}`] = this.props.username;\n                }\n            }\n        })\n        .then(async()=> {\n            settings = await this.fetchSettings()\n        })\n        .catch(() => {\n            console.log('oepsie, could not fetch data')\n        })\n        .finally(() => {\n            this.setState({\n                isLoading: false,\n                postIds: postIds,\n                postIdAndName: postIdAndName,\n                settings: settings\n            });\n        })\n    }\n    fetchSettings = () => {\n        const options = { decrypt: false }\n        return getFile('settings.json', options)\n            .then((file) => {\n                let settings = JSON.parse(file || false)\n                return settings ? settings : this.state.settings\n            })\n    }\n\n    saveNewStatus() {\n        let postIds = this.state.postIds;\n        let posts = this.state.posts;\n        let text = this.state.newStatus.trim();\n        if (text.length === 0) {return false};\n        let createdAt = Date.now();\n        let idNumber = postIds.length\n\n        let post = {\n            id: idNumber++,\n            text: text,\n            created_at: createdAt,\n            image: this.state.newImage\n        }\n\n        postIds.unshift(createdAt);\n        const options = {encrypt: false }\n        putFile(`post${createdAt}.json`, JSON.stringify(post), options)\n        .then(() => {\n            putFile('postids.json', JSON.stringify(postIds), options)\n            .then(() => {\n                this.setState({\n                    postIds: postIds,\n                    posts: posts\n                })\n                this.fetchData()\n            })\n            .catch(() => {\n                console.log('something went wrong with saving your post id')\n            })\n        })\n        .catch(() => {\n            console.log('something went wrong with saving your post')\n        })\n    }\n\n    handleNewStatusChange(event) {\n        this.setState({ newStatus: event.target.value })\n    }\n    captureFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            this.setState({newImage: `data:image/jpeg;base64,${Buffer(reader.result).toString(\"base64\")}`});\n        };\n    };\n    captureFileBackground = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => {\n            this.setState({ \n                settings: {\n                    backgroundImage: `data:image/jpeg;base64,${Buffer(reader.result).toString(\"base64\")}`\n                }\n            });\n        };\n    }\n    defaultBackground = (event) => {\n        event.preventDefault();\n        this.setState({\n            settings: {\n                backgroundImage: false\n            }\n        })\n    }\n\n    handleNewStatusSubmit(event) {\n        this.saveNewStatus()\n        this.setState({\n            newStatus: \"\",\n            newImage: false\n        })\n    }\n    deleteImage = () => {\n        this.setState({ newImage: false})\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    logUserInfo = () => {\n        console.log(loadUserData());\n    }\n    toggleSettings = () => {\n        this.setState({changeInfo: !this.state.changeInfo})\n    }\n    saveSettings = () => {\n        let settings = this.state.settings\n\n        const options = { encrypt: false }\n        putFile('settings.json', JSON.stringify(settings), options)\n        .then(() => {\n            this.setState({\n                changeInfo: false\n            })\n        })\n    }\n    displayFriends = () => {\n        this.setState({displayFriends: !this.state.displayFriends})\n    }\n\n    render() {\n        const { person, username } = this.props;\n        const backgroundStyle = {\n            'backgroundImage': `url(\"${this.state.settings.backgroundImage ? this.state.settings.backgroundImage : backPic}\"`\n        }\n        const settingsForm = (<div className=\"new-status settings\">\n            <Row>\n                <Col md={12}>\n                    <Form>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"12\">\n                                To change the display name, image and bio press <a target='_blank' href='https://browser.blockstack.org/profiles' rel=\"noopener noreferrer\" >here</a>.\n                            </Form.Label>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"3\">\n                                Background image\n                            </Form.Label>\n                            <Col sm=\"9\">\n                                <label className=\"btn btn-outline-success\">\n                                    Upload <input type=\"file\" onChange={this.captureFileBackground} hidden />\n                                </label>\n                                {'     '}\n                                <label className=\"btn btn-outline-danger\" onClick={this.defaultBackground}>\n                                    Default\n                                </label>\n                            </Col>\n                        </Form.Group>\n                        <hr />\n                        <Button variant=\"success\" onClick={this.saveSettings}>\n                            Save\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </div>);\n        const friendDisplay = this.props.friends.length > 0 ? (<div className='profile-posts'>\n            <div className=\"my-post\"><h1>Friends</h1>\n            <ListGroup variant=\"flush\">\n            {this.props.friends.map((friend) => (\n                <div className=\"my-friend\" key={friend}>\n                    <Row>\n                        <Col xs={12}>\n                            <ListGroup.Item onClick={() => { this.props.searchFor(friend) }}>{friend}</ListGroup.Item>\n                        </Col>\n                    </Row>\n                </div>\n            )\n                    )}</ListGroup></div>\n        </div>) : (\n                <div className='profile-posts'>\n                    <div className=\"my-post\"><h1>Friends</h1>\n                        <ListGroup variant=\"flush\">\n                            <Row>\n                                <Col xs={12}>\n                                <ListGroup.Item>You don't have any friends yet.</ListGroup.Item>\n                                </Col>\n                            </Row>\n                        </ListGroup>\n                    </div>\n                </div>);\n        return (\n            <div>\n            {person &&\n                <div className=\"container-myprofile\">\n                    <div className='container-desc-prof'>\n                    <div style={backgroundStyle} className=\"background-image\"></div>\n                    <UserInfo person={person} username={username} />\n                    <div className='myprofile-options'>\n                            <Row className='my-options' >\n                                <Col xs={3}>\n                                    \n                                </Col>\n                                <Col xs={1}>\n                                    <img src={settingsIcon} \n                                    onClick={this.toggleSettings}\n                                    alt=''\n                                    className='bio-icons'/>\n                                </Col>\n                                <Col xs={8}>\n                                    <img src={usersIcon}\n                                        onClick={this.displayFriends}\n                                        alt=''\n                                        className='bio-icons' />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={3}></Col>\n                                <Col xs={12} md={8}><hr /> </Col>\n                                <Col md={1}>\n\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={12}>\n                                    <p className='text-secondary'>{person.description() ? person.description()\n                                            : 'You have no bio.'}\n                                    </p> \n                                </Col>\n                            </Row>\n                    </div>\n                    \n                    </div>\n\n                    {this.state.displayFriends && friendDisplay}\n                    {!this.state.displayFriends && <div className='profile-posts'>\n                        <Row>\n                        <Col xs={1} md={1} xl={2}>\n                                \n                        </Col>\n                        <Col sm={12} md={10} xl={8}>\n                        {this.isLocal() &&\n                            <div>\n                                {this.state.changeInfo && settingsForm }\n                            <div className=\"new-status\">\n                                <Row>\n                                    <Col md={12}>\n                                            {\n                                                this.state.newImage &&\n                                                <div className='post-pic-container'>\n                                                    <Button onClick={this.deleteImage} variant=\"outline-danger\" className='delete-img'>X</Button>\n                                                    <img alt='' className='post-pic' als='' src={this.state.newImage} />\n                                                </div>}\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    className=\"input-status\"\n                                                    value={this.state.newStatus}\n                                                    onChange={e => this.handleNewStatusChange(e)}\n                                                    placeholder=\"What's on your mind?\"\n                                                />\n                                            </InputGroup>\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                <Col xs={2} className='input-btn-wrapper'>\n                                    <label className=\"btn btn-outline-secondary\">\n                                        <img alt='' src={cameraIcon} /> <input type=\"file\" onChange={this.captureFile} hidden/>\n                                    </label>\n                                </Col>\n                                <Col xs={6}></Col>\n                                <Col xs={4} className=\" input-btn-wrapper\">\n                                            <Button variant=\"outline-success\"\n                                        className=\"\"\n                                        onClick={e => this.handleNewStatusSubmit(e)}\n                                    >\n                                        POST\n                                    </Button>\n                                </Col>\n                                </Row>\n                            </div>\n                            </div>\n                        }</Col>\n                        <Col xs={1} md={1}></Col>\n                        </Row>\n                        <Row>\n                        <Col xs={1} md={1} xl={2}></Col>\n                            <Col sm={12} md={10} xl={8}>\n                                <InfiniteScroll array={false} order={this.state.postIds} allPosts={this.state.posts} postIdAndName={this.state.postIdAndName} person={person} username={username} doneLoading={!this.state.isLoading}/>\n                        </Col>\n                        <Col xs={1} md={1}></Col>\n                        </Row>\n                    </div>}\n                </div>}\n            </div>\n\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/settings.674d9d35.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.8b7b6457.svg\";","module.exports = __webpack_public_path__ + \"static/media/users.937fec69.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.1c89fea0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.c14b3b5d.png\";","import React, { Component } from 'react';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport logo from '../assets/2.png';\nimport freeSpeech from '../assets/free-speech-icon.svg';\nimport privacy from '../assets/privacy-icon.svg';\nimport tracking from '../assets/tracking-icon.svg'\n\nexport default class Signin extends Component {\n    \n\n    render() {\n        const { handleSignIn } = this.props;\n\n        return (\n            <div className=\"panel-landing\">\n                <div className='landing-container'>\n                <div className='landing-logo-container'>\n                    <img className='landing-logo' src={logo} alt='logo' />\n                </div>\n                <h1>The Decentralized Social Network</h1>\n                <p>Create, Follow, and Share. You always decide with who. </p>\n                </div>\n                <div className='landing-square-container'>\n                    <div className='square-container'>\n                        <div className='landing-square-text'>\n                            <Button\n                                className='signin-button'\n                                onClick={handleSignIn.bind(this)}\n                            >\n                                Sign In with Blockstack\n                        </Button>\n                        </div>\n                        <div className='landing-square'>\n\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className='card-container-back'>\n                    <Container className='card-container'>\n                        <Row>\n                            <Col md={12} lg={4}>\n                                <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                                <img src={freeSpeech} alt='free speech icon' />\n                                                <span>Free Speech</span>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <img src={freeSpeech} alt='free speech icon' />\n                                            <hr/>\n                                            <p>Take a stand against government surveillance or companies using your social media data without your consent. You decide what you share and with who you share it.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md={12} lg={4}>\n                                <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                            <img src={privacy} alt='privacy-icon' />\n                                                <span>You own your data</span>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <img src={privacy} alt='privacy-icon' />\n                                            <hr />\n                                            <p>We use Blockstack’s decentralized identity and storage system, giving you total ownership of your data. You control who can access your data, not us.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md={12} lg={4}>\n                                <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                            <img src={tracking} alt='no tracking icon' />\n                                                <span>No tracking</span>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <img src={tracking} alt='no tracking icon' />\n                                            <hr/>\n                                            <p>My Block Space is an open source project created by the community for the community. The goal is to make an easy to use social platform for free where the user is <strong>not</strong> the product.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Navbar, Nav, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport {signUserOut} from 'blockstack';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/3.png';\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\n\n\nclass Navigationbar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchUser: undefined\n        }\n    }\n\n    handleSignOut = (event) => {\n        event.preventDefault();\n        signUserOut(window.location.origin)\n    }\n    \n    handleKeyPress = (e) => {\n        e.preventDefault();\n        const user = this.state.searchUser.trim();\n        this.props.searchFor(user);\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        this.setState({\n            searchUser: event.target.value\n        })\n    }\n\n\n    render() {\n        \n        const { person, username } = this.props;\n        \n        return (\n            <div>\n                <Navbar bg=\"light\" collapseOnSelect fixed=\"top\" expand=\"sm\" className='navbar-con'>\n                        <Navbar.Brand >\n                        <Link className='nav-home-link' to='/feed'>\n                            <img\n                                src={logo}\n                                width=\"30\"\n                                height=\"30\"\n                                className=\"d-inline-block align-top logo-nav\"\n                                alt=\"MY BLOCK SPACE\"\n                            />\n                        </Link>\n                        </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className='mr-auto'>\n                            <InputGroup size=\"sm\">\n                                <FormControl\n                                    type=\"text\"\n                                    placeholder=\"Search for friends\"\n                                    onChange={e => this.handleChange(e)}\n                                />\n                                <InputGroup.Append>\n                                    <Button variant=\"outline-secondary\" onClick={e => this.handleKeyPress(e)} >Search</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Nav>\n                        <Nav className='justify-content-end\"'>\n                            <Nav.Link onClick={this.handleSignOut}>\n                                Sign-Out\n                            </Nav.Link>\n                            <Link to={`/${username ? username : null}`}>\n                            <img\n                                    src={person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage}\n                                alt=''\n                                className=\"nav-img\"\n                            />\n                            </Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Navigationbar;","import React, { Component } from 'react';\n\nexport default class NoResult extends Component {\n    \n\n    render() {\n        return (\n            <div className='no-res-container'>\n                <p>Oopsie... <br /> We can't find the blockstack id <big>\"{this.props.username}\"</big>.</p>\n                \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Loader extends Component {\n\n    render() {\n        return (<div className=\"container-myprofile\"><div className='loader'></div></div>)\n    }\n    \n}","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n    loadUserData,\n    Person,\n    getFile,\n    lookupProfile,\n    putFile\n} from 'blockstack';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport backPic from '../assets/standard-wallpaper.jpg';\nimport NoResult from './NoResult';\nimport Loader from './Loader';\nimport UserInfo from './UserInfo';\nimport InfiniteScroll from './InfiniteScroll';\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            person: undefined,\n            username: \"\",\n            checked: false,\n            statuses: [],\n            statusIndex: 0,\n            isLoading: true,\n            following: false,\n            postIds: [],\n            posts: [],\n            postIdAndName: {},\n            isLocal: false\n        };\n        this.fetchData = this.fetchData.bind(this);\n    }\n\n    isLocal = () => {\n        this.setState({isLocal: this.props.match.params.username === loadUserData().username ? true : false});\n    }\n\n    fetchData() {\n        const username = this.props.match.params.username.indexOf('.id.blockstack') > -1 ? this.props.match.params.username : this.props.match.params.username + '.id.blockstack';\n        this.setState({ isLoading: true, username: username })\n        lookupProfile(username)\n            .then((profile) => {\n                this.setState({\n                    person: new Person(profile)\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    person: false\n                })\n            })\n\n        const options = { username: username, decrypt: false }\n        let postIds;\n        let postIdAndName = {}\n        getFile('postids.json', options)\n        .then((file) => {\n            postIds = JSON.parse(file || '[]')\n            if (postIds.length > 0) {\n                for (let i = 0; i < postIds.length; i++) {\n                    postIdAndName[`${postIds[i]}`] = username;\n                }\n            }\n        })\n        .catch(() => {\n            console.log('oepsie, could not fetch data')\n        })\n        .finally(() => {\n            this.setState({\n                isLoading: false,\n                postIds: postIds,\n                postIdAndName: postIdAndName\n            });\n        })\n        this.props.friends.includes(username) ? this.setState({ following: true }) : this.setState({ following: false });\n    }\n    addFriend = (event) => {\n        event.preventDefault();\n        let friends = this.props.friends\n        friends.push(this.state.username)\n        const options = { encrypt: false }\n        putFile('friends.json', JSON.stringify(friends), options)\n            .then((result) => {\n                console.log('res ,', result)\n                this.setState({ following: true })\n            })\n        this.setState({following: true})\n    }\n    unFriend = (event) => {\n        event.preventDefault();\n        let friends = this.props.friends\n        let user = this.state.username\n        friends = friends.filter(username => username !== user)\n        this.props.updateFriends(friends);\n        const options = { encrypt: false }\n        putFile('friends.json', JSON.stringify(friends), options)\n        .then((result) => {\n            console.log('res ,', result)\n            this.setState({ following: false })\n        })\n    }\n\n    componentDidMount() {\n        this.isLocal();\n        this.fetchData();\n    }\n    componentWillReceiveProps() {\n        this.fetchData()\n    }\n    logUserInfo = () => {\n        console.log(loadUserData());\n    }\n    \n\n    render() {\n        const { person, username, isLoading } = this.state;\n        const backgroundStyle = {\n            'backgroundImage': `url(\"${backPic}\"`\n        }\n        \n        return (\n\n            <div>\n            {this.state.isLocal && <Redirect to={`/${loadUserData().username}`} />}\n            {isLoading && <Loader/>}\n            {!isLoading && person ?\n                    <div className=\"container-myprofile\">\n                        <div style={backgroundStyle} className='container-desc-prof'>\n                            <UserInfo person={person} username={username} />\n                            <div className='myprofile-options'>\n                                <Row className='my-options' >\n                                    <Col xs={3}>\n\n                                    </Col>\n                                    <Col xs={2}>\n                                        <p className='text-secondary'>Posts: {this.state.postIds.length}</p>\n                                    </Col>\n                                    <Col xs={2}>\n                                        {!this.state.following ? <Button variant=\"outline-success\"\n                                            className=\"\"\n                                            onClick={this.addFriend}\n                                        >\n                                        Follow\n                                        </Button> : <Button variant=\"outline-danger\"\n                                        className=\"\"\n                                        onClick={this.unFriend}\n                                    >\n                                        Unfollow\n                                        </Button>}\n                                    </Col>\n                                    <Col xs={5}>\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={3}></Col>\n                                    <Col xs={12} md={8}><hr /> </Col>\n                                    <Col md={1}>\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12}>\n                                        <p className='text-secondary'>{person.description() ? person.description()\n                                            : 'You have no bio.'}\n                                        </p>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                        </div>\n                        <div className='profile-posts'>\n                            <Row>\n                                <Col xs={1} md={1} xl={2}></Col>\n                                <Col sm={12} md={10} xl={8}>\n                                    {this.state.isLoading && <span>Loading...</span>}\n                                    {!this.state.isLoading && this.state.postIds.length > 0 && <InfiniteScroll array={false} order={this.state.postIds} postIdAndName={this.state.postIdAndName} person={person} username={username} doneLoading={true} />\n                                    }\n                                    {this.state.postIds.length === 0 && <h1>This user has no posts yet.</h1>}\n                                </Col>\n                                <Col xs={1} md={1}></Col>\n                            </Row>\n                        </div>\n                    </div> : <NoResult username={username}/>}\n            </div>\n        );\n    }\n}","export const mergeSort = (array) => {\n    if (array.length === 1 || array.length === 0) {\n        return array\n    }\n    // Split Array in into right and left\n    const length = array.length;\n    const middle = Math.floor(length / 2)\n    const left = array.slice(0, middle)\n    const right = array.slice(middle)\n\n    return merge(\n        mergeSort(left),\n        mergeSort(right)\n    )\n}\n\nconst merge = (left, right) => {\n    const result = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n    while (leftIndex < left.length &&\n        rightIndex < right.length) {\n        if (left[leftIndex] > right[rightIndex]) {\n            result.push(left[leftIndex]);\n            leftIndex++;\n        } else {\n            result.push(right[rightIndex]);\n            rightIndex++\n        }\n    }\n    return result.concat(left.slice(leftIndex)).concat(right.slice(rightIndex));\n}\n\n\n\n","import React, { Component } from 'react';\nimport { getFile } from 'blockstack';\nimport { Row, Col, ProgressBar } from 'react-bootstrap';\nimport InfiniteScroll from './InfiniteScroll';\nimport { mergeSort } from '../utils/reverseMergeSort.js';\n\nexport default class Feed extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allPosts: {},\n            isLoading: false,\n            order: [],\n            noPosts: false,\n            counter: 0,\n            doneLoading: false\n        }\n    }\n\n    // here I call the fetch functions, if counter === friends.length, stop calling fetch functions and setState\n    fetchPostsFromFriends = () => {\n        let postIdAndName = this.state.allPosts;\n        let postids = this.state.order;\n        let counter = this.state.counter;\n        let friends = this.props.friends;\n        if (counter < friends.length) {\n            const options = { username: friends[counter], decrypt: false }\n            this.getPostIds(options, postids, postIdAndName, friends[counter])\n        } else {\n            this.setState({ order: mergeSort(this.state.order), isLoading: false, noPosts: postids.length === 0 ? true : false, doneLoading: true});\n        }\n    }\n\n    // here I fetch the postids from a username, then call the fetchPostsfromFriends again till counter === friends.length\n    getPostIds = (options, postids, postIdAndName, username) => {\n        getFile('postids.json', options)\n        .then(res => { return JSON.parse(res || '[]')})\n        .then(res => {\n            this.setState({ counter: this.state.counter + 1 })\n            if (res.length > 0) {\n                this.concatPostIds(res, postids)\n                this.connectIdWithName(res, postIdAndName, username)\n                this.fetchPostsFromFriends()\n            } else {\n                this.fetchPostsFromFriends()\n            }\n        })\n    }\n\n    // add post ids to existing array with prev postids\n    concatPostIds = (postId, postids) => {\n        this.setState({ order: [...postids, ...postId]})\n    }\n\n    // connectPostId with username for quick loop-up in the infinite scroll component\n    connectIdWithName = (postId, postIdAndName, username) => {\n        let result = postIdAndName;\n        if (postId.length > 0) {\n            // here I will have to push the postid into the postIdAndName object with a loop\n            for (let i = 0; i < postId.length; i++) {\n                result[`${postId[i]}`] = username;\n            }\n        }\n        return this.setState({allPosts: result})\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true})\n        this.fetchPostsFromFriends()\n    }\n    \n\n    render() {\n        let now = ((100 / parseInt(this.props.friends.length)) * parseInt(this.state.counter)).toFixed(2);\n\n        return (\n            <div className='feed-container'>\n                <Row>\n                    <Col md={1} xl={2}></Col>\n                    <Col sm={12} md={10} xl={8}>\n                        {this.state.isLoading && <div><ProgressBar className='prog-bar' striped variant=\"success\" now={now} /><p>Loaded {this.state.counter} of {this.props.friends.length} friends.</p></div>}\n                        {this.state.noPosts && !this.state.isLoading && <h1>Oepsie, you have no posts in your timeline yet</h1>}\n                        {!this.state.noPosts && !this.state.isLoading && \n                            <InfiniteScroll array={true} order={this.state.order} postIdAndName={this.state.allPosts} doneLoading={this.state.doneLoading} />\n                        }\n                    </Col>\n                    <Col md={1} xl={2}></Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport MyProfile from './components/MyProfile';\nimport Signin from './components/Signin';\nimport Navbar from './components/Navbar';\nimport Profile from './components/Profile';\nimport Feed from './components/Feed';\nimport {\n  isSignInPending,\n  isUserSignedIn,\n  redirectToSignIn,\n  handlePendingSignIn,\n  loadUserData,\n  getFile,\n  Person\n} from 'blockstack';\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css';\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    let isSignedIn = this.checkSignedInStatus();\n\n    this.state = {\n      isSignedIn,\n      person: {\n        name() {\n          return 'Anonymous';\n        },\n        avatarUrl() {\n          return avatarFallbackImage;\n        },\n        description() {\n          return 'No description'\n        }\n      },\n      username: null,\n      friends: []\n    }\n\n    if (isSignedIn) {\n      this.loadPerson();\n    }\n  }\n\n  // function checks if user is signed in.\n  checkSignedInStatus = () => {\n    if (isUserSignedIn()) {\n      return true;\n    } else if (isSignInPending()) {\n      handlePendingSignIn().then(function (userData) {\n        this.props.history.push('/')\n      })\n      return false;\n    }\n  }\n\n  loadPerson = async () => {\n    let userData = loadUserData()\n    let person = await new Person(userData.profile)\n    this.loadFriends();\n    let username = await userData.username\n    // let urlusername = username.slice(0, -11);\n    this.setState({ person, username })\n    this.props.history.push(`/${username}`)\n  }\n\n  loadFriends = () => {\n    const options = { decrypt: false }\n    getFile('friends.json', options)\n      .then((file) => {\n        let friends = JSON.parse(file || '[]')\n        friends.push(this.state.username)\n        this.setState({\n          friends: friends\n        })\n      })\n  }\n\n  handleSignIn = (e) => {\n    e.preventDefault();\n    const origin = window.location.origin\n    redirectToSignIn(origin, origin + '/manifest.json', ['store_write', 'publish_data'])\n  }\n\n  searchFor = (name) => {\n    this.props.history.push(`/users/${name}`)\n  }\n  updateFriends = (friends) => {\n    this.setState({friends: friends})\n  }\n\n  componentWillMount() {\n    if (isSignInPending()) {\n      handlePendingSignIn().then((userData) => {\n        // not sure what to do with user data\n        window.location = window.location.origin;\n      });\n    }\n  }\n\n  componentDidMount() {\n    // this.loadPerson()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.isSignedIn ?\n          <Signin handleSignIn={this.handleSignIn} />\n          :\n          (<div><Navbar\n            searchFor={this.searchFor}\n            person={this.state.person}\n            username={this.state.username}\n           />\n          <Switch>\n            <Route\n              path='/users/:username'\n              render={\n                props => <Profile\n                  updateFriends={this.updateFriends}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            <Route\n              exact path='/feed'\n              render={\n                props => <Feed\n                  searchFor={this.searchFor}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            <Route\n              path='/:username'\n              render={\n                props => <MyProfile\n                  searchFor={this.searchFor}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            <Route\n              exact path='/'\n              render={\n                props => <Feed\n                  searchFor={this.searchFor}\n                  friends={this.state.friends}\n                  person={this.state.person}\n                  username={this.state.username}\n                  {...props} />\n              }\n            />\n            \n          </Switch></div>)\n        }\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <Route\n            path='/'\n            render={props => <App {...props} />}\n        />\n\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();","import React, {Component} from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\n\n\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            now: Date.now(),\n            fullText: false,\n            person: false\n        }\n    }\n\n    parseDate = (time) => {\n        const { now } = this.state;\n        if (Math.floor((now - time) / (1000 * 60)) < 60) {\n            return `${Math.floor((now - time) / (1000 * 60))} m`\n        } else if (Math.floor((now - time) / (1000 * 60 * 60)) < 24) {\n            return `${Math.floor((now - time) / (1000 * 60 * 60))} h`\n        } else if (Math.floor((now - time) / (1000 * 60 * 60 * 24)) < 7) {\n            return `${Math.floor((now - time) / (1000 * 60 * 60 * 24))} d`\n        } else if (Math.floor((now - time) / (1000 * 60 * 60 * 24)) < 365) {\n            return `${Math.floor(Math.floor((now - time) / (1000 * 60 * 60 * 24)) / 7)} w`\n        }\n    }\n    showFulltext = () => {\n        this.setState({ fullText: !this.state.fullText})\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n        const {person, username, status} = this.props;\n\n        return (\n            <div className=\"my-post\" >\n                <Row className='poster-info-con'>\n                    <Col xs={2}>\n                        <Link className='post-link' to={`/users/${username}`}><img\n                            src={person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage}\n                            alt=''\n                            className=\"post-img\"\n                        /></Link>\n                    </Col>\n                    <Col xs={3} className='poster-info'>\n                        <Link className='post-link' to={`/users/${username}`}>{username}</Link>\n                    </Col>\n                    <Col xs={4}></Col>\n                    <Col xs={3}>\n                        <span className='post-date'>{`${this.parseDate(status.created_at)} ago`}</span>\n                    </Col>\n                </Row>\n                <hr />\n                {\n                    status.image &&\n                    <div className='post-pic-container'>\n                        <img alt='' className='post-pic' src={status.image} />\n                        <hr /></div>}\n                {!this.state.fullText && (status.text.length > 500 ? (<pre>{status.text.substring(0, 500)}...<br/><strong className='show-more' onClick={this.showFulltext}>show more</strong></pre>) : <pre>{status.text}</pre>)}\n\n                {this.state.fullText && <pre>{status.text} <br /><strong className='show-more' onClick={this.showFulltext}>show less</strong></pre>}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Post from './Post';\nimport { getFile, lookupProfile, Person } from 'blockstack';\n\n\nexport default class InfiniteScroll extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            posts: {},\n            counter: 0,\n            loadPost: false,\n            first: false\n        }\n    }\n    // Here I fetch the post from the this.props.username - I need the username and postid to do this I get this as postIdAndName I also need an array with ids(aka timestamps) for the order\n    loadMore = () => {\n        let posts = {...this.state.posts}\n        for (let i = this.state.counter; i < this.state.counter + 2; i++) {\n            let id = this.props.order[i]\n            const options = { username: this.props.postIdAndName[id], decrypt: false }\n            getFile(`post${id}.json`, options)\n                .then((file) => {\n                    let post = JSON.parse(file)\n                    return <Post person={this.props.person} username={this.props.username} status={post} key={post.created_at} />\n                })\n                .then((post) => {\n                    posts[id] = post;\n                })\n                .then(() => {\n                    if (i === this.state.counter + 1) {\n                        this.setState({\n                            posts: posts,\n                            counter: (i),\n                            loadPost: false\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.setState({\n                        posts: posts,\n                        counter: (i - 1),\n                        loadPost: false\n                    })\n                })\n        }\n    }\n\n    // Here I fetch the person and post - I need the username and postid to do this I get this as postIdAndName I also need an array with ids(aka timestamps) for the order\n    loadFeed = () => {\n        let posts = { ...this.state.posts }\n        for (let i = this.state.counter; i < this.state.counter + 4; i++) {\n            let id = this.props.order[i]\n            let username = this.props.postIdAndName[id]\n            let person;\n            const options = { username: username, decrypt: false }\n            lookupProfile(username)\n            .then((profile) => {\n                person = new Person(profile);\n            })\n            .then(() => {\n                getFile(`post${id}.json`, options)\n                    .then((file) => {\n                        let post = JSON.parse(file)\n                        return <Post person={person} username={username} status={post} key={post.created_at} />\n                    })\n                    .then((post) => {\n                        posts[id] = post;\n                    })\n                    .then(() => {\n                        if (i === this.state.counter + 1) {\n                            this.setState({\n                                posts: posts,\n                                counter: (i),\n                                loadPost: false\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.setState({\n                            posts: posts,\n                            counter: (i - 1),\n                            loadPost: false\n                        })\n                    })\n            })\n        }\n    }\n\n    // detect if user scrolled to bottom of the page\n    handleScroll = () => {\n        if (this.props.order.length - 1 > this.state.counter && !this.state.loadPost) {\n            var scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n            var scrollHeight = (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight;\n            var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n            var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n            if (scrolledToBottom) {\n                if (!this.props.array) {\n                    this.loadMore()\n                    this.setState({ loadPost: true })\n                } else {\n                    this.loadFeed();\n                    this.setState({ loadPost: true })\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        \n    }\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleOnScroll);\n    }\n\n    render() {\n        // check if props posts are loaded, then trigger first fetch for posts\n        if (this.props.doneLoading === true && this.state.counter === 0 && !this.state.first) {\n            if (this.props.array) {\n                this.loadFeed();\n                this.setState({ loadPost: true, first: true })\n            } else {\n                this.loadMore();\n                this.setState({ loadPost: true, first: true })\n            }\n        }\n        \n        return(\n            <div className='infinite-list'>\n                {this.props.order.map(index => {return this.state.posts[index]})}\n                {this.state.loadPost && <div className='feed-loader'></div>}\n            </div>\n        )\n    }\n}"],"sourceRoot":""}